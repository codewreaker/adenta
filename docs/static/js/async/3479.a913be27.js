"use strict";(self.webpackChunkrslib_website=self.webpackChunkrslib_website||[]).push([["3479"],{5188:function(e,s,n){n.r(s),n.d(s,{default:()=>l});var i=n(813),r=n(7522);function a(e){let s={a:"a",code:"code",div:"div",h1:"h1",li:"li",p:"p",pre:"pre",span:"span",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(s.h1,{id:"liboutbase",children:[(0,i.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#liboutbase",children:"#"}),"lib.outBase"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Type:"})," ",(0,i.jsx)(s.code,{children:"string"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Default Value:"})," ",(0,i.jsx)(s.code,{children:"undefined"})]}),"\n"]}),"\n",(0,i.jsxs)(s.div,{className:"rspress-directive info",children:[(0,i.jsx)(s.div,{className:"rspress-directive-title",children:"INFO"}),(0,i.jsx)(s.div,{className:"rspress-directive-content",children:(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"outBase"})," is a specific configuration for ",(0,i.jsx)(s.a,{href:"/guide/basic/output-structure#bundle--bundleless",children:"bundleless mode"}),". This configuration does not take effect in bundle mode because all output files are bundled into a single file, so there's no need to determine the base output directory."]})})]}),"\n",(0,i.jsxs)(s.p,{children:["When building a project where source files exist across multiple directories with bundleless mode, the output directory structure will be replicated relative to the ",(0,i.jsx)(s.code,{children:"outBase"})," directory in the output directory. If no base output directory is specified, the ",(0,i.jsx)(s.a,{href:"https://en.wikipedia.org/wiki/Lowest_common_ancestor",rel:"noopener noreferrer",target:"_blank",children:"lowest common ancestor"})," of all input entry points is used by default."]}),"\n",(0,i.jsxs)(s.p,{children:["Configuring ",(0,i.jsx)(s.code,{children:"outBase"})," will change the path of the base output directory. ",(0,i.jsx)(s.code,{children:"outBase"})," can be either a relative path from the current process directory or an absolute path."]}),"\n",(0,i.jsx)(s.p,{children:"For example, we have the following directory structure:"}),"\n",(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(s.pre,{className:"shiki css-variables",style:{backgroundColor:"var(--shiki-background)",color:"var(--shiki-foreground)"},tabIndex:"0",children:(0,i.jsxs)(s.code,{className:"language-txt",children:[(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{children:"."})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{children:"├── package.json"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{children:"├── rslib.config.ts"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{children:"└── src"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{children:"    └── utils"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{children:"        ├── bar"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{children:"        │   └── index.ts"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{children:"        ├── foo"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{children:"        │   └── index.ts"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{children:"        └── index.ts"})})]})})}),"\n",(0,i.jsxs)(s.p,{children:["If the output base directory is not specified, the lowest common ancestor of all input entry point paths, i.e. ",(0,i.jsx)(s.code,{children:"./src/utils"}),", is used by default, and the final file output structure is:"]}),"\n",(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(s.pre,{className:"shiki css-variables",style:{backgroundColor:"var(--shiki-background)",color:"var(--shiki-foreground)"},tabIndex:"0",children:(0,i.jsxs)(s.code,{className:"language-txt",children:[(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{children:"dist"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{children:"├── bar"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{children:"│   └── index.js"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{children:"├── foo"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{children:"│   └── index.js"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{children:"└── index.js"})})]})})}),"\n",(0,i.jsxs)(s.p,{children:["When ",(0,i.jsx)(s.code,{children:"outBase"})," is configured as ",(0,i.jsx)(s.code,{children:"./src"}),", the output directory structure is:"]}),"\n",(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(s.pre,{className:"shiki css-variables",style:{backgroundColor:"var(--shiki-background)",color:"var(--shiki-foreground)"},tabIndex:"0",children:(0,i.jsxs)(s.code,{className:"language-txt",children:[(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{children:"dist"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{children:"└── utils"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{children:"    ├── bar"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{children:"    │   └── index.js"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{children:"    ├── foo"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{children:"    │   └── index.js"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{children:"    └── index.js"})})]})})}),"\n",(0,i.jsxs)(s.div,{className:"rspress-directive tip",children:[(0,i.jsx)(s.div,{className:"rspress-directive-title",children:"TIP"}),(0,i.jsx)(s.div,{className:"rspress-directive-content",children:(0,i.jsxs)(s.p,{children:["When the project needs to generate declaration files, to ensure that the generated declaration files and JS files maintain a consistent output directory structure, if you modify the ",(0,i.jsx)(s.code,{children:"outBase"})," configuration, you need to make sure that the ",(0,i.jsx)(s.a,{href:"https://www.typescriptlang.org/tsconfig/rootDir.html",rel:"noopener noreferrer",target:"_blank",children:"rootDir"})," in ",(0,i.jsx)(s.code,{children:"tsconfig.json"})," to the same path."]})})]})]})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["en%2Fconfig%2Flib%2Fout-base.mdx"]={toc:[],title:"lib.outBase",headingTitle:"lib.outBase",frontmatter:{}}}}]);