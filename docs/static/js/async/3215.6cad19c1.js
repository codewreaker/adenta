"use strict";(self.webpackChunkrslib_website=self.webpackChunkrslib_website||[]).push([["3215"],{9621:function(e,r,t){t.r(r),t.d(r,{default:()=>n});var o=t(813),i=t(7522);function s(e){let r={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(r.h1,{id:"solution",children:[(0,o.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#solution",children:"#"}),"Solution"]}),"\n",(0,o.jsx)(r.p,{children:"In this chapter, we will introduce how to use Rslib to development libraries for browser and Node.js. We will also cover how to create libraries for different UI frameworks."}),"\n",(0,o.jsxs)(r.h2,{id:"browser-target",children:[(0,o.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#browser-target",children:"#"}),"Browser target"]}),"\n",(0,o.jsxs)(r.p,{children:["When developing a library that runs in the browser, you can package it in both ",(0,o.jsx)(r.a,{href:"/guide/basic/output-format#esm--cjs",children:"ESM"})," and ",(0,o.jsx)(r.a,{href:"/guide/basic/output-format#esm--cjs",children:"CJS"})," formats for integration with application bundlers. Configuring the package ",(0,o.jsx)(r.a,{href:"https://nodejs.org/api/packages.html#conditional-exports",rel:"noopener noreferrer",target:"_blank",children:"conditional exports"})," to ESM output allows for better tree shaking. Additionally, you can create ",(0,o.jsx)(r.a,{href:"/guide/basic/output-format#umd",children:"UMD"})," format output for direct browser use and even generate ",(0,o.jsx)(r.a,{href:"/guide/advanced/module-federation",children:"Module Federation "})," formats for dynamic loading by other applications. Configure ",(0,o.jsx)(r.a,{href:"https://rsbuild.rs/guide/advanced/browserslist",rel:"noopener noreferrer",target:"_blank",children:"Browserslist"})," according to the target browser support to determine the downgrade syntax of the output, or add a ",(0,o.jsx)(r.a,{href:"/guide/advanced/output-compatibility",children:"polyfill"})," for API compatibility."]}),"\n",(0,o.jsxs)(r.p,{children:["When publishing to npm, you can choose not to ",(0,o.jsx)(r.a,{href:"/config/rsbuild/output#outputminify",children:"minify"})," your code or to minify it while providing a ",(0,o.jsx)(r.a,{href:"/config/rsbuild/output#outputsourcemap",children:"sourcemap"})," to enhance the debugging experience for users of your library. For styling, you can use CSS, or CSS pre-processors like Sass, Less, or Stylus, or apply PostCSS for CSS post-processing. Tools like Tailwind CSS can also help in building your styles. Using CSS Modules to create CSS modules is another option."]}),"\n",(0,o.jsxs)(r.p,{children:["In terms of resource management, Rslib handles static assets used in your code, such as SVG and PNG files. You can also build a component library of ",(0,o.jsx)(r.a,{href:"/guide/solution/react",children:"React"}),", ",(0,o.jsx)(r.a,{href:"https://github.com/web-infra-dev/rslib/tree/main/examples/preact-component-bundle-false",rel:"noopener noreferrer",target:"_blank",children:"Preact"}),", or other frameworks, and use ",(0,o.jsx)(r.a,{href:"/guide/advanced/storybook",children:"Storybook"})," for UI component development and testing."]}),"\n",(0,o.jsx)(r.p,{children:"Refer to the solutions in this chapter to learn how to use Rslib to develop browser libraries for different frameworks."}),"\n","\n","\n",(0,o.jsxs)(r.h2,{id:"nodejs-target",children:[(0,o.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#nodejs-target",children:"#"}),"Node.js target"]}),"\n",(0,o.jsxs)(r.p,{children:["Rslib set ",(0,o.jsx)(r.a,{href:"/config/rsbuild/output#outputtarget",children:"target"})," to ",(0,o.jsx)(r.code,{children:'"node"'})," by default to development libraries for Node.js."]}),"\n",(0,o.jsxs)(r.p,{children:["You can create a ",(0,o.jsx)(r.a,{href:"/guide/basic/output-format#esm--cjs",children:"pure ESM"})," package or a ",(0,o.jsx)(r.a,{href:"/guide/basic/output-format#esm--cjs",children:"dual package"})," that supports both ESM and CJS as needed. In CJS output, ",(0,o.jsx)(r.code,{children:"import.meta.url"})," will be automatically ",(0,o.jsx)(r.a,{href:"/config/lib/shims",children:"shimmed"})," for compatibility and ",(0,o.jsx)(r.code,{children:"__dirname"})," and ",(0,o.jsx)(r.code,{children:"__filename"})," got optional ESM shims to ensure proper use across different module system. Node.js's built-in packages will be ",(0,o.jsx)(r.a,{href:"/guide/advanced/third-party-deps",children:"externalized by default"}),"."]}),"\n","\n"]})}function n(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:r}={...(0,i.a)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}n.__RSPRESS_PAGE_META={},n.__RSPRESS_PAGE_META["en%2Fguide%2Fsolution%2Findex.mdx"]={toc:[{id:"browser-target",text:"Browser target",depth:2},{id:"nodejs-target",text:"Node.js target",depth:2}],title:"Solution",headingTitle:"Solution",frontmatter:{}}}}]);