"use strict";(self.webpackChunkrslib_website=self.webpackChunkrslib_website||[]).push([["863"],{6574:function(e,s,r){r.r(s),r.d(s,{default:()=>l});var n=r(813),i=r(7522);function o(e){let s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",span:"span",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s.h1,{id:"use-typescript",children:[(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#use-typescript",children:"#"}),"Use TypeScript"]}),"\n",(0,n.jsxs)(s.p,{children:["Rslib supports TypeScript by default, allowing you to directly use ",(0,n.jsx)(s.code,{children:".ts"})," and ",(0,n.jsx)(s.code,{children:".tsx"})," files in your projects."]}),"\n",(0,n.jsxs)(s.h2,{id:"typescript-transpilation",children:[(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#typescript-transpilation",children:"#"}),"TypeScript transpilation"]}),"\n",(0,n.jsx)(s.p,{children:"Rslib uses SWC by default for transpiling TypeScript code, and it also supports switching to Babel for transpilation."}),"\n",(0,n.jsxs)(s.h3,{id:"isolatedmodules",children:[(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#isolatedmodules",children:"#"}),"isolatedModules"]}),"\n",(0,n.jsxs)(s.p,{children:["Unlike the native TypeScript compiler, tools like SWC and Babel compile each file separately and cannot determine whether an imported name is a type or a value. Therefore, when using TypeScript in Rslib, you need to enable the ",(0,n.jsx)(s.a,{href:"https://typescriptlang.org/tsconfig/#isolatedModules",rel:"noopener noreferrer",target:"_blank",children:"isolatedModules"})," option in your ",(0,n.jsx)(s.code,{children:"tsconfig.json"})," file:"]}),"\n",(0,n.jsx)(n.Fragment,{children:(0,n.jsx)(s.pre,{className:"shiki css-variables",style:{backgroundColor:"var(--shiki-background)",color:"var(--shiki-foreground)"},tabIndex:"0",title:"tsconfig.json",children:(0,n.jsxs)(s.code,{className:"language-json",children:[(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:"{"})}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:'  "compilerOptions"'}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:" {"})]}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:'    "isolatedModules"'}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:" true"})]}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:"  }"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:"}"})})]})})}),"\n",(0,n.jsx)(s.p,{children:"This option can help you avoid using certain syntax that cannot be correctly compiled by SWC and Babel, such as cross-file type references. It will guide you to correct the corresponding usage:"}),"\n",(0,n.jsx)(n.Fragment,{children:(0,n.jsx)(s.pre,{className:"shiki css-variables",style:{backgroundColor:"var(--shiki-background)",color:"var(--shiki-foreground)"},tabIndex:"0",children:(0,n.jsxs)(s.code,{className:"language-ts",children:[(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-comment)"},children:"// Wrong"})}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"export"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:" { SomeType } "}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"from"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:" './types'"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:";"})]}),"\n",(0,n.jsx)(s.span,{className:"line"}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-comment)"},children:"// Correct"})}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"export"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:" type"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:" { SomeType } "}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"from"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:" './types'"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:";"})]})]})})}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsxs)(s.p,{children:["See ",(0,n.jsx)(s.a,{href:"https://swc.rs/docs/migrating-from-tsc",rel:"noopener noreferrer",target:"_blank",children:"SWC - Migrating from tsc"})," for more details about the differences between SWC and tsc."]}),"\n"]}),"\n",(0,n.jsxs)(s.h2,{id:"preset-types",children:[(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#preset-types",children:"#"}),"Preset types"]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"@rslib/core"})," provides some preset type definitions, including CSS Modules, static assets, ",(0,n.jsx)(s.code,{children:"import.meta"})," and other types."]}),"\n",(0,n.jsxs)(s.p,{children:["You can create a ",(0,n.jsx)(s.code,{children:"src/env.d.ts"})," file to reference it:"]}),"\n",(0,n.jsx)(n.Fragment,{children:(0,n.jsx)(s.pre,{className:"shiki css-variables",style:{backgroundColor:"var(--shiki-background)",color:"var(--shiki-foreground)"},tabIndex:"0",title:"src/env.d.ts",children:(0,n.jsx)(s.code,{className:"language-ts",children:(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-comment)"},children:"/// <"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"reference"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:" types"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"@rslib/core/types"'}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-comment)"},children:" />"})]})})})}),"\n",(0,n.jsxs)(s.h2,{id:"type-checking",children:[(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#type-checking",children:"#"}),"Type checking"]}),"\n",(0,n.jsx)(s.p,{children:"When transpiling TypeScript code using tools like SWC and Babel, type checking is not performed."}),"\n",(0,n.jsxs)(s.p,{children:["Rslib provides the ",(0,n.jsx)(s.a,{href:"/config/lib/dts",children:"lib.dts"})," configuration item for generating TypeScript declaration files, and type checking is performed by default during the generation process."]}),"\n",(0,n.jsxs)(s.p,{children:["You can skip type checking by setting the ",(0,n.jsx)(s.a,{href:"https://www.typescriptlang.org/tsconfig/#noCheck",rel:"noopener noreferrer",target:"_blank",children:"noCheck"})," configuration item to ",(0,n.jsx)(s.code,{children:"true"})," in the ",(0,n.jsx)(s.code,{children:"tsconfig.json"})," file."]}),"\n",(0,n.jsxs)(s.h2,{id:"tsconfigjson-path",children:[(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#tsconfigjson-path",children:"#"}),"tsconfig.json path"]}),"\n",(0,n.jsxs)(s.p,{children:["Rslib by default reads the ",(0,n.jsx)(s.code,{children:"tsconfig.json"})," file from the root directory. You can use ",(0,n.jsx)(s.a,{href:"/config/rsbuild/source#sourcetsconfigpath",children:"source.tsconfigPath"})," to configure a custom ",(0,n.jsx)(s.code,{children:"tsconfig.json"})," file path."]}),"\n",(0,n.jsx)(n.Fragment,{children:(0,n.jsx)(s.pre,{className:"shiki css-variables",style:{backgroundColor:"var(--shiki-background)",color:"var(--shiki-foreground)"},tabIndex:"0",title:"rslib.config.ts",children:(0,n.jsxs)(s.code,{className:"language-ts",children:[(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"export"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:" default"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:" {"})]}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:"  lib"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:" ["})]}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-comment)"},children:"    // ..."})}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:"  ]"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:"  source"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:" {"})]}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:"    tsconfigPath"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:" './tsconfig.custom.json'"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,n.jsxs)(s.span,{className:"line",children:[(0,n.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:"  }"}),(0,n.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-foreground)"},children:"};"})})]})})}),"\n",(0,n.jsxs)(s.h2,{id:"decorators-version",children:[(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#decorators-version",children:"#"}),"Decorators version"]}),"\n",(0,n.jsxs)(s.p,{children:["By default, Rslib uses the ",(0,n.jsx)(s.a,{href:"https://rsbuild.rs/config/source/decorators#2022-03",rel:"noopener noreferrer",target:"_blank",children:(0,n.jsx)(s.code,{children:"2022-03"})})," version of the decorators."]}),"\n",(0,n.jsxs)(s.p,{children:["If ",(0,n.jsx)(s.a,{href:"https://www.typescriptlang.org/tsconfig/#experimentalDecorators",rel:"noopener noreferrer",target:"_blank",children:"experimentalDecorators"})," is enabled in ",(0,n.jsx)(s.code,{children:"tsconfig.json"}),", Rslib will set ",(0,n.jsx)(s.a,{href:"/config/rsbuild/source#sourcedecorators",children:"source.decorators.version"})," to ",(0,n.jsx)(s.code,{children:"legacy"})," to use the legacy decorators."]})]})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["en%2Fguide%2Fbasic%2Ftypescript.mdx"]={toc:[{id:"typescript-transpilation",text:"TypeScript transpilation",depth:2},{id:"isolatedmodules",text:"isolatedModules",depth:3},{id:"preset-types",text:"Preset types",depth:2},{id:"type-checking",text:"Type checking",depth:2},{id:"tsconfigjson-path",text:"tsconfig.json path",depth:2},{id:"decorators-version",text:"Decorators version",depth:2}],title:"Use TypeScript",headingTitle:"Use TypeScript",frontmatter:{}}}}]);